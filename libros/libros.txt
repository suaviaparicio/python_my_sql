
-- Consulta: crea 5 usuarios diferentes: Jane Austen, Emily Dickinson, Fyodor Dostoevsky, William Shakespeare, Lau Tzu
INSERT INTO usuarios (nombre, apellido, created_at, updated_at)
VALUES ('Jane', 'Austen', NOW(), NOW()), ('Emily', 'Dickinson', NOW(), NOW()), ('Fyodor', 'Dostoevsky', NOW(), NOW()), 
('William', 'Shakespeare', NOW(), NOW()), ('Lau', 'Tzu', NOW(), NOW());

-- Consulta: crea 5 libros con los siguientes nombres: C Sharp, Java, Python, PHP , Ruby
INSERT INTO libros (titulo, num_paginas, created_at, updated_at)
VALUES ('C Sharp', 120, NOW(), NOW()), ('Java', 500, NOW(), NOW()), ('Python', 90, NOW(), NOW()), 
('PHP', 50, NOW(), NOW()), ('Ruby', 50, NOW(), NOW());

-- Consulta: cambia el nombre del libro de C Sharp a C#
UPDATE libros 
SET titulo = 'C#'
WHERE id = 1;

-- Consulta: cambia el nombre del cuarto usuario a Bill
UPDATE usuarios
SET nombre = 'Bill'
WHERE id = 4;

-- Consulta: haz que el primer usuario marque como favorito los 2 primeros libros
INSERT INTO favoritos (usuario_id, libro_id)
VALUES (1, 1), (1, 2); 

-- Consulta: haz que el segundo usuario marque como favorito los primeros 3 libros
INSERT INTO favoritos (usuario_id, libro_id)
VALUES (2, 1), (2, 2), (2, 3); 

-- Consulta: haz que el tercer usuario marque como favorito los 4 primeros libros
INSERT INTO favoritos (usuario_id, libro_id)
VALUES (3, 1), (3, 2), (3, 3), (3, 4); 

-- Consulta: Haz que el cuarto usuario marque como favorito todos los libros
INSERT INTO favoritos (usuario_id, libro_id)
VALUES (4, 1), (4, 2), (4, 3), (4, 4), (4, 5); 

-- Consulta: recupera todos los usuarios que marcaron como favorito el tercer libro
SELECT usuarios.id, usuarios.nombre, usuarios.apellido, usuarios.created_at, usuarios.updated_at
FROM usuarios
JOIN favoritos ON usuarios.id = favoritos.usuario_id
JOIN libros ON favoritos.libro_id = libros.id
WHERE libros.id = 3;

-- Consulta: elimina el primer usuario de los favoritos del tercer libro
DELETE
FROM favoritos
WHERE libro_id = 3
LIMIT 1;

-- Consulta: Haz que el quinto usuario marque como favorito el segundo libro
INSERT INTO favoritos (usuario_id, libro_id)
VALUES (5, 2);

-- Encuentra todos los libros que el tercer usuario marc√≥ como favoritos
SELECT *
FROM libros
JOIN favoritos ON libros.id = favoritos.libro_id
JOIN usuarios ON favoritos.usuario_id = usuarios.id
WHERE usuarios.id = 3;

-- Consulta: encuentra todos los usuarios que marcaron como favorito el quinto libro
SELECT *
FROM usuarios
JOIN favoritos ON usuarios.id = favoritos.usuario_id
JOIN libros ON favoritos.libro_id = libros.id
WHERE libros.id = 5

